/*
 * Created on 2 Dec 2016 ( Time 16:47:10 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.heroku.ra.entities;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "contact"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="contact", schema="salesforce" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="Contact.countAll", query="SELECT COUNT(x) FROM Contact x" )
} )
public class Contact implements Serializable
{
    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="lastname", length=80)
    private String     lastname     ;

    @Column(name="firstname", length=40)
    private String     firstname    ;

    @Column(name="_hc_err", length=2147483647)
    private String     hcErr        ;

    @Column(name="accountid", length=18)
    private String     accountid    ;

    @Column(name="mailingstate", length=80)
    private String     mailingstate ;

    @Column(name="phone", length=40)
    private String     phone        ;

    @Column(name="email", length=80)
    private String     email        ;

    @Column(name="mailingcountry", length=80)
    private String     mailingcountry ;

    @Column(name="mailinglongitude")
    private Double     mailinglongitude ;

    @Column(name="sfid", length=18)
    private String     sfid         ;

    @Column(name="mailinggeocodeaccuracy", length=40)
    private String     mailinggeocodeaccuracy ;

    @Column(name="currency__c", length=255)
    private String     currencyC    ;

    @Column(name="isdeleted")
    private Boolean    isdeleted    ;

    @Column(name="mailingpostalcode", length=20)
    private String     mailingpostalcode ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="systemmodstamp")
    private Date       systemmodstamp ;

    @Column(name="salutation", length=40)
    private String     salutation   ;

    @Column(name="mailingcity", length=40)
    private String     mailingcity  ;

    @Column(name="homephone", length=40)
    private String     homephone    ;

    @Column(name="title", length=128)
    private String     title        ;

    @Column(name="mailingstreet", length=255)
    private String     mailingstreet ;

    @Column(name="wants_notifications__c")
    private Boolean    wantsNotificationsC ;

    @Temporal(TemporalType.DATE)
    @Column(name="birthdate")
    private Date       birthdate    ;

    @Column(name="photourl", length=255)
    private String     photourl     ;

    @Column(name="description", length=2147483647)
    private String     description  ;

    @Temporal(TemporalType.DATE)
    @Column(name="lastactivitydate")
    private Date       lastactivitydate ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="createddate")
    private Date       createddate  ;

    @Column(name="mailinglatitude")
    private Double     mailinglatitude ;

    @Column(name="name", length=121)
    private String     name         ;

    @Column(name="languages__c", length=100)
    private String     languagesC   ;

    @Column(name="level__c", length=255)
    private String     levelC       ;

    @Column(name="mobilephone", length=40)
    private String     mobilephone  ;

    @Column(name="_hc_lastop", length=32)
    private String     hcLastop     ;

    @Column(name="profile_image_url__c", length=255)
    private String     profileImageUrlC ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public Contact()
    {
		super();
    }

        public Contact update(Contact a) {
		this.id = a.id;
		return a;
	}

    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id )
    {
        this.id = id ;
    }
    public Integer getId()
    {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : lastname ( varchar ) 
    public void setLastname( String lastname )
    {
        this.lastname = lastname;
    }
    public String getLastname()
    {
        return this.lastname;
    }

    //--- DATABASE MAPPING : firstname ( varchar ) 
    public void setFirstname( String firstname )
    {
        this.firstname = firstname;
    }
    public String getFirstname()
    {
        return this.firstname;
    }

    //--- DATABASE MAPPING : _hc_err ( text ) 
    public void setHcErr( String hcErr )
    {
        this.hcErr = hcErr;
    }
    public String getHcErr()
    {
        return this.hcErr;
    }

    //--- DATABASE MAPPING : accountid ( varchar ) 
    public void setAccountid( String accountid )
    {
        this.accountid = accountid;
    }
    public String getAccountid()
    {
        return this.accountid;
    }

    //--- DATABASE MAPPING : mailingstate ( varchar ) 
    public void setMailingstate( String mailingstate )
    {
        this.mailingstate = mailingstate;
    }
    public String getMailingstate()
    {
        return this.mailingstate;
    }

    //--- DATABASE MAPPING : phone ( varchar ) 
    public void setPhone( String phone )
    {
        this.phone = phone;
    }
    public String getPhone()
    {
        return this.phone;
    }

    //--- DATABASE MAPPING : email ( varchar ) 
    public void setEmail( String email )
    {
        this.email = email;
    }
    public String getEmail()
    {
        return this.email;
    }

    //--- DATABASE MAPPING : mailingcountry ( varchar ) 
    public void setMailingcountry( String mailingcountry )
    {
        this.mailingcountry = mailingcountry;
    }
    public String getMailingcountry()
    {
        return this.mailingcountry;
    }

    //--- DATABASE MAPPING : mailinglongitude ( float8 ) 
    public void setMailinglongitude( Double mailinglongitude )
    {
        this.mailinglongitude = mailinglongitude;
    }
    public Double getMailinglongitude()
    {
        return this.mailinglongitude;
    }

    //--- DATABASE MAPPING : sfid ( varchar ) 
    public void setSfid( String sfid )
    {
        this.sfid = sfid;
    }
    public String getSfid()
    {
        return this.sfid;
    }

    //--- DATABASE MAPPING : mailinggeocodeaccuracy ( varchar ) 
    public void setMailinggeocodeaccuracy( String mailinggeocodeaccuracy )
    {
        this.mailinggeocodeaccuracy = mailinggeocodeaccuracy;
    }
    public String getMailinggeocodeaccuracy()
    {
        return this.mailinggeocodeaccuracy;
    }

    //--- DATABASE MAPPING : currency__c ( varchar ) 
    public void setCurrencyC( String currencyC )
    {
        this.currencyC = currencyC;
    }
    public String getCurrencyC()
    {
        return this.currencyC;
    }

    //--- DATABASE MAPPING : isdeleted ( bool ) 
    public void setIsdeleted( Boolean isdeleted )
    {
        this.isdeleted = isdeleted;
    }
    public Boolean getIsdeleted()
    {
        return this.isdeleted;
    }

    //--- DATABASE MAPPING : mailingpostalcode ( varchar ) 
    public void setMailingpostalcode( String mailingpostalcode )
    {
        this.mailingpostalcode = mailingpostalcode;
    }
    public String getMailingpostalcode()
    {
        return this.mailingpostalcode;
    }

    //--- DATABASE MAPPING : systemmodstamp ( timestamp ) 
    public void setSystemmodstamp( Date systemmodstamp )
    {
        this.systemmodstamp = systemmodstamp;
    }
    public Date getSystemmodstamp()
    {
        return this.systemmodstamp;
    }

    //--- DATABASE MAPPING : salutation ( varchar ) 
    public void setSalutation( String salutation )
    {
        this.salutation = salutation;
    }
    public String getSalutation()
    {
        return this.salutation;
    }

    //--- DATABASE MAPPING : mailingcity ( varchar ) 
    public void setMailingcity( String mailingcity )
    {
        this.mailingcity = mailingcity;
    }
    public String getMailingcity()
    {
        return this.mailingcity;
    }

    //--- DATABASE MAPPING : homephone ( varchar ) 
    public void setHomephone( String homephone )
    {
        this.homephone = homephone;
    }
    public String getHomephone()
    {
        return this.homephone;
    }

    //--- DATABASE MAPPING : title ( varchar ) 
    public void setTitle( String title )
    {
        this.title = title;
    }
    public String getTitle()
    {
        return this.title;
    }

    //--- DATABASE MAPPING : mailingstreet ( varchar ) 
    public void setMailingstreet( String mailingstreet )
    {
        this.mailingstreet = mailingstreet;
    }
    public String getMailingstreet()
    {
        return this.mailingstreet;
    }

    //--- DATABASE MAPPING : wants_notifications__c ( bool ) 
    public void setWantsNotificationsC( Boolean wantsNotificationsC )
    {
        this.wantsNotificationsC = wantsNotificationsC;
    }
    public Boolean getWantsNotificationsC()
    {
        return this.wantsNotificationsC;
    }

    //--- DATABASE MAPPING : birthdate ( date ) 
    public void setBirthdate( Date birthdate )
    {
        this.birthdate = birthdate;
    }
    public Date getBirthdate()
    {
        return this.birthdate;
    }

    //--- DATABASE MAPPING : photourl ( varchar ) 
    public void setPhotourl( String photourl )
    {
        this.photourl = photourl;
    }
    public String getPhotourl()
    {
        return this.photourl;
    }

    //--- DATABASE MAPPING : description ( text ) 
    public void setDescription( String description )
    {
        this.description = description;
    }
    public String getDescription()
    {
        return this.description;
    }

    //--- DATABASE MAPPING : lastactivitydate ( date ) 
    public void setLastactivitydate( Date lastactivitydate )
    {
        this.lastactivitydate = lastactivitydate;
    }
    public Date getLastactivitydate()
    {
        return this.lastactivitydate;
    }

    //--- DATABASE MAPPING : createddate ( timestamp ) 
    public void setCreateddate( Date createddate )
    {
        this.createddate = createddate;
    }
    public Date getCreateddate()
    {
        return this.createddate;
    }

    //--- DATABASE MAPPING : mailinglatitude ( float8 ) 
    public void setMailinglatitude( Double mailinglatitude )
    {
        this.mailinglatitude = mailinglatitude;
    }
    public Double getMailinglatitude()
    {
        return this.mailinglatitude;
    }

    //--- DATABASE MAPPING : name ( varchar ) 
    public void setName( String name )
    {
        this.name = name;
    }
    public String getName()
    {
        return this.name;
    }

    //--- DATABASE MAPPING : languages__c ( varchar ) 
    public void setLanguagesC( String languagesC )
    {
        this.languagesC = languagesC;
    }
    public String getLanguagesC()
    {
        return this.languagesC;
    }

    //--- DATABASE MAPPING : level__c ( varchar ) 
    public void setLevelC( String levelC )
    {
        this.levelC = levelC;
    }
    public String getLevelC()
    {
        return this.levelC;
    }

    //--- DATABASE MAPPING : mobilephone ( varchar ) 
    public void setMobilephone( String mobilephone )
    {
        this.mobilephone = mobilephone;
    }
    public String getMobilephone()
    {
        return this.mobilephone;
    }

    //--- DATABASE MAPPING : _hc_lastop ( varchar ) 
    public void setHcLastop( String hcLastop )
    {
        this.hcLastop = hcLastop;
    }
    public String getHcLastop()
    {
        return this.hcLastop;
    }

    //--- DATABASE MAPPING : profile_image_url__c ( varchar ) 
    public void setProfileImageUrlC( String profileImageUrlC )
    {
        this.profileImageUrlC = profileImageUrlC;
    }
    public String getProfileImageUrlC()
    {
        return this.profileImageUrlC;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(lastname);
        sb.append("|");
        sb.append(firstname);
        sb.append("|");
        sb.append(hcErr);
        sb.append("|");
        sb.append(accountid);
        sb.append("|");
        sb.append(mailingstate);
        sb.append("|");
        sb.append(phone);
        sb.append("|");
        sb.append(email);
        sb.append("|");
        sb.append(mailingcountry);
        sb.append("|");
        sb.append(mailinglongitude);
        sb.append("|");
        sb.append(sfid);
        sb.append("|");
        sb.append(mailinggeocodeaccuracy);
        sb.append("|");
        sb.append(currencyC);
        sb.append("|");
        sb.append(isdeleted);
        sb.append("|");
        sb.append(mailingpostalcode);
        sb.append("|");
        sb.append(systemmodstamp);
        sb.append("|");
        sb.append(salutation);
        sb.append("|");
        sb.append(mailingcity);
        sb.append("|");
        sb.append(homephone);
        sb.append("|");
        sb.append(title);
        sb.append("|");
        sb.append(mailingstreet);
        sb.append("|");
        sb.append(wantsNotificationsC);
        sb.append("|");
        sb.append(birthdate);
        sb.append("|");
        sb.append(photourl);
        sb.append("|");
        sb.append(description);
        sb.append("|");
        sb.append(lastactivitydate);
        sb.append("|");
        sb.append(createddate);
        sb.append("|");
        sb.append(mailinglatitude);
        sb.append("|");
        sb.append(name);
        sb.append("|");
        sb.append(languagesC);
        sb.append("|");
        sb.append(levelC);
        sb.append("|");
        sb.append(mobilephone);
        sb.append("|");
        sb.append(hcLastop);
        sb.append("|");
        sb.append(profileImageUrlC);
        return sb.toString(); 
    } 

}