/*
 * Created on 27 Nov 2016 ( Time 22:49:54 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.heroku.ra.entities;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "activity_subcategory__c"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="activity_subcategory__c", schema="salesforce" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="ActivitySubcategoryC.countAll", query="SELECT COUNT(x) FROM ActivitySubcategoryC x" )
} )
public class ActivitySubcategoryC implements Serializable
{
    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="name", length=80)
    private String     name         ;

    @Column(name="sfid", length=18)
    private String     sfid         ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="lastmodifieddate")
    private Date       lastmodifieddate ;

    @Column(name="image_url__c", length=255)
    private String     imageUrlC    ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="createddate")
    private Date       createddate  ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="systemmodstamp")
    private Date       systemmodstamp ;

    @Column(name="category__c", length=18)
    private String     categoryC    ;

    @Column(name="_hc_err", length=2147483647)
    private String     hcErr        ;

    @Column(name="_hc_lastop", length=32)
    private String     hcLastop     ;

    @Column(name="isdeleted")
    private Boolean    isdeleted    ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public ActivitySubcategoryC()
    {
		super();
    }

        public ActivitySubcategoryC update(ActivitySubcategoryC a) {
		this.id = a.id;
		return a;
	}

    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id )
    {
        this.id = id ;
    }
    public Integer getId()
    {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : name ( varchar ) 
    public void setName( String name )
    {
        this.name = name;
    }
    public String getName()
    {
        return this.name;
    }

    //--- DATABASE MAPPING : sfid ( varchar ) 
    public void setSfid( String sfid )
    {
        this.sfid = sfid;
    }
    public String getSfid()
    {
        return this.sfid;
    }

    //--- DATABASE MAPPING : lastmodifieddate ( timestamp ) 
    public void setLastmodifieddate( Date lastmodifieddate )
    {
        this.lastmodifieddate = lastmodifieddate;
    }
    public Date getLastmodifieddate()
    {
        return this.lastmodifieddate;
    }

    //--- DATABASE MAPPING : image_url__c ( varchar ) 
    public void setImageUrlC( String imageUrlC )
    {
        this.imageUrlC = imageUrlC;
    }
    public String getImageUrlC()
    {
        return this.imageUrlC;
    }

    //--- DATABASE MAPPING : createddate ( timestamp ) 
    public void setCreateddate( Date createddate )
    {
        this.createddate = createddate;
    }
    public Date getCreateddate()
    {
        return this.createddate;
    }

    //--- DATABASE MAPPING : systemmodstamp ( timestamp ) 
    public void setSystemmodstamp( Date systemmodstamp )
    {
        this.systemmodstamp = systemmodstamp;
    }
    public Date getSystemmodstamp()
    {
        return this.systemmodstamp;
    }

    //--- DATABASE MAPPING : category__c ( varchar ) 
    public void setCategoryC( String categoryC )
    {
        this.categoryC = categoryC;
    }
    public String getCategoryC()
    {
        return this.categoryC;
    }

    //--- DATABASE MAPPING : _hc_err ( text ) 
    public void setHcErr( String hcErr )
    {
        this.hcErr = hcErr;
    }
    public String getHcErr()
    {
        return this.hcErr;
    }

    //--- DATABASE MAPPING : _hc_lastop ( varchar ) 
    public void setHcLastop( String hcLastop )
    {
        this.hcLastop = hcLastop;
    }
    public String getHcLastop()
    {
        return this.hcLastop;
    }

    //--- DATABASE MAPPING : isdeleted ( bool ) 
    public void setIsdeleted( Boolean isdeleted )
    {
        this.isdeleted = isdeleted;
    }
    public Boolean getIsdeleted()
    {
        return this.isdeleted;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(name);
        sb.append("|");
        sb.append(sfid);
        sb.append("|");
        sb.append(lastmodifieddate);
        sb.append("|");
        sb.append(imageUrlC);
        sb.append("|");
        sb.append(createddate);
        sb.append("|");
        sb.append(systemmodstamp);
        sb.append("|");
        sb.append(categoryC);
        sb.append("|");
        sb.append(hcErr);
        sb.append("|");
        sb.append(hcLastop);
        sb.append("|");
        sb.append(isdeleted);
        return sb.toString(); 
    } 

}