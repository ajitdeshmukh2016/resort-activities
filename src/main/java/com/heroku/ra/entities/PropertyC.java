/*
 * Created on 3 Dec 2016 ( Time 12:00:39 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.heroku.ra.entities;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "property__c"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="property__c", schema="salesforce" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="PropertyC.countAll", query="SELECT COUNT(x) FROM PropertyC x" )
} )
public class PropertyC implements Serializable
{
    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="lastreferenceddate")
    private Date       lastreferenceddate ;

    @Column(name="isdeleted")
    private Boolean    isdeleted    ;

    @Column(name="country__c", length=255)
    private String     countryC     ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="systemmodstamp")
    private Date       systemmodstamp ;

    @Column(name="ownerid", length=18)
    private String     ownerid      ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="lastvieweddate")
    private Date       lastvieweddate ;

    @Column(name="city__c", length=100)
    private String     cityC        ;

    @Column(name="state__c", length=100)
    private String     stateC       ;

    @Column(name="address__c", length=255)
    private String     addressC     ;

    @Column(name="_hc_lastop", length=32)
    private String     hcLastop     ;

    @Column(name="_hc_err", length=2147483647)
    private String     hcErr        ;

    @Column(name="lastmodifiedbyid", length=18)
    private String     lastmodifiedbyid ;

    @Column(name="createdbyid", length=18)
    private String     createdbyid  ;

    @Column(name="poperty_map__c", length=255)
    private String     popertyMapC  ;

    @Column(name="sfid", length=18)
    private String     sfid         ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="createddate")
    private Date       createddate  ;

    @Column(name="name", length=80)
    private String     name         ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="lastmodifieddate")
    private Date       lastmodifieddate ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public PropertyC()
    {
		super();
    }

        public PropertyC update(PropertyC a) {
		this.id = a.id;
        this.lastreferenceddate = a.lastreferenceddate;
        this.isdeleted = a.isdeleted;
        this.countryC = a.countryC;
        this.systemmodstamp = a.systemmodstamp;
        this.ownerid = a.ownerid;
        this.lastvieweddate = a.lastvieweddate;
        this.cityC = a.cityC;
        this.stateC = a.stateC;
        this.addressC = a.addressC;
        this.hcLastop = a.hcLastop;
        this.hcErr = a.hcErr;
        this.lastmodifiedbyid = a.lastmodifiedbyid;
        this.createdbyid = a.createdbyid;
        this.popertyMapC = a.popertyMapC;
        this.sfid = a.sfid;
        this.createddate = a.createddate;
        this.name = a.name;
        this.lastmodifieddate = a.lastmodifieddate;



		return a;
	}

    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id )
    {
        this.id = id ;
    }
    public Integer getId()
    {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : lastreferenceddate ( timestamp ) 
    public void setLastreferenceddate( Date lastreferenceddate )
    {
        this.lastreferenceddate = lastreferenceddate;
    }
    public Date getLastreferenceddate()
    {
        return this.lastreferenceddate;
    }

    //--- DATABASE MAPPING : isdeleted ( bool ) 
    public void setIsdeleted( Boolean isdeleted )
    {
        this.isdeleted = isdeleted;
    }
    public Boolean getIsdeleted()
    {
        return this.isdeleted;
    }

    //--- DATABASE MAPPING : country__c ( varchar ) 
    public void setCountryC( String countryC )
    {
        this.countryC = countryC;
    }
    public String getCountryC()
    {
        return this.countryC;
    }

    //--- DATABASE MAPPING : systemmodstamp ( timestamp ) 
    public void setSystemmodstamp( Date systemmodstamp )
    {
        this.systemmodstamp = systemmodstamp;
    }
    public Date getSystemmodstamp()
    {
        return this.systemmodstamp;
    }

    //--- DATABASE MAPPING : ownerid ( varchar ) 
    public void setOwnerid( String ownerid )
    {
        this.ownerid = ownerid;
    }
    public String getOwnerid()
    {
        return this.ownerid;
    }

    //--- DATABASE MAPPING : lastvieweddate ( timestamp ) 
    public void setLastvieweddate( Date lastvieweddate )
    {
        this.lastvieweddate = lastvieweddate;
    }
    public Date getLastvieweddate()
    {
        return this.lastvieweddate;
    }

    //--- DATABASE MAPPING : city__c ( varchar ) 
    public void setCityC( String cityC )
    {
        this.cityC = cityC;
    }
    public String getCityC()
    {
        return this.cityC;
    }

    //--- DATABASE MAPPING : state__c ( varchar ) 
    public void setStateC( String stateC )
    {
        this.stateC = stateC;
    }
    public String getStateC()
    {
        return this.stateC;
    }

    //--- DATABASE MAPPING : address__c ( varchar ) 
    public void setAddressC( String addressC )
    {
        this.addressC = addressC;
    }
    public String getAddressC()
    {
        return this.addressC;
    }

    //--- DATABASE MAPPING : _hc_lastop ( varchar ) 
    public void setHcLastop( String hcLastop )
    {
        this.hcLastop = hcLastop;
    }
    public String getHcLastop()
    {
        return this.hcLastop;
    }

    //--- DATABASE MAPPING : _hc_err ( text ) 
    public void setHcErr( String hcErr )
    {
        this.hcErr = hcErr;
    }
    public String getHcErr()
    {
        return this.hcErr;
    }

    //--- DATABASE MAPPING : lastmodifiedbyid ( varchar ) 
    public void setLastmodifiedbyid( String lastmodifiedbyid )
    {
        this.lastmodifiedbyid = lastmodifiedbyid;
    }
    public String getLastmodifiedbyid()
    {
        return this.lastmodifiedbyid;
    }

    //--- DATABASE MAPPING : createdbyid ( varchar ) 
    public void setCreatedbyid( String createdbyid )
    {
        this.createdbyid = createdbyid;
    }
    public String getCreatedbyid()
    {
        return this.createdbyid;
    }

    //--- DATABASE MAPPING : poperty_map__c ( varchar ) 
    public void setPopertyMapC( String popertyMapC )
    {
        this.popertyMapC = popertyMapC;
    }
    public String getPopertyMapC()
    {
        return this.popertyMapC;
    }

    //--- DATABASE MAPPING : sfid ( varchar ) 
    public void setSfid( String sfid )
    {
        this.sfid = sfid;
    }
    public String getSfid()
    {
        return this.sfid;
    }

    //--- DATABASE MAPPING : createddate ( timestamp ) 
    public void setCreateddate( Date createddate )
    {
        this.createddate = createddate;
    }
    public Date getCreateddate()
    {
        return this.createddate;
    }

    //--- DATABASE MAPPING : name ( varchar ) 
    public void setName( String name )
    {
        this.name = name;
    }
    public String getName()
    {
        return this.name;
    }

    //--- DATABASE MAPPING : lastmodifieddate ( timestamp ) 
    public void setLastmodifieddate( Date lastmodifieddate )
    {
        this.lastmodifieddate = lastmodifieddate;
    }
    public Date getLastmodifieddate()
    {
        return this.lastmodifieddate;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(lastreferenceddate);
        sb.append("|");
        sb.append(isdeleted);
        sb.append("|");
        sb.append(countryC);
        sb.append("|");
        sb.append(systemmodstamp);
        sb.append("|");
        sb.append(ownerid);
        sb.append("|");
        sb.append(lastvieweddate);
        sb.append("|");
        sb.append(cityC);
        sb.append("|");
        sb.append(stateC);
        sb.append("|");
        sb.append(addressC);
        sb.append("|");
        sb.append(hcLastop);
        sb.append("|");
        sb.append(hcErr);
        sb.append("|");
        sb.append(lastmodifiedbyid);
        sb.append("|");
        sb.append(createdbyid);
        sb.append("|");
        sb.append(popertyMapC);
        sb.append("|");
        sb.append(sfid);
        sb.append("|");
        sb.append(createddate);
        sb.append("|");
        sb.append(name);
        sb.append("|");
        sb.append(lastmodifieddate);
        return sb.toString(); 
    } 

}